# Copyright 2020 Nathan (Blaise) Bruer.  All rights reserved.

[package]
name = "dummy_name_to_make_cargo_tooling_happy"
version = "0.0.0"

[lib]
path = "needed_only_to_make_cargo_tooling_happy.rs"

[dependencies]
prost = "0.9.0"
prost-types = "0.9.0"
hex = "0.4.3"
async-trait = "0.1.51"
fixed-buffer = "0.2.3"
futures = "0.3.17"
tokio = { version = "1.13.0", features = ["macros", "io-util", "fs", "rt-multi-thread"] }
tokio-stream = "0.1.8"
tokio-util = { version = "0.6.9", features = ["io", "io-util"] }
tonic = "0.6.1"
lazy-init = "0.5.0"
log = "0.4.14"
env_logger = "0.9.0"
serde = "1.0.127"
json5 = "0.3.0"
sha2 = "0.9.5"
lru = "0.6.6"
rand = "0.8.4"
rusoto_s3 = "0.46.0"
rusoto_core = "0.46.0"
http = "^0.2"
pin-project-lite = "0.2.7"
fast-async-mutex = "0.6.7"
lease = "0.2.3"
lz4_flex = "0.9.0"
bincode = "1.3.3"
hash-roll = "0.3.0"
bytes = "1.1.0"

[dev-dependencies]
clap = "2.33.3"
stdext = "0.2.1"
prost-build = "0.9.0"
tonic-build = "0.6.0"
pretty_assertions = "0.7.2"
# Crates.io does not have `rustfmt` that is sufficient version, so load from github directly.
rustfmt-nightly =  { git = "https://github.com/rust-lang/rustfmt", tag = "v1.4.38" }
maplit = "1.0.2"
mock_instant = "0.2.1"
rusoto_mock = "=0.46.0"

[patch.crates-io]
rusoto_mock = { git = "https://github.com/allada/rusoto.git", rev = "cc9acca00dbafa41a37d75faeaf2a4baba33d42e" }
rusoto_credential = { git = "https://github.com/allada/rusoto.git", rev = "cc9acca00dbafa41a37d75faeaf2a4baba33d42e" }
rusoto_signature = { git = "https://github.com/allada/rusoto.git", rev = "cc9acca00dbafa41a37d75faeaf2a4baba33d42e" }

[package.metadata.raze.crates.json5.'*']
data_attr = "['src/json5.pest']"

[package.metadata.raze.crates.prost-build.'*']
gen_buildrs = true
additional_deps = ["@com_google_protobuf//:protoc"]
additional_env = { PROTOC = "bazel-out/host/bin/external/com_google_protobuf/protoc" }

[package.metadata.raze.crates.rustfmt-nightly.'*']
gen_buildrs = true
extra_aliased_targets = [
    "cargo_bin_rustfmt"
]

[package.metadata.raze]
# The path relative path to the Bazel workspace root (location of
# WORKSPACE.bazel/WORKSPACE file). If no workspace file is found,
# the current working directory is used.
workspace_path = "//third_party"

default_gen_buildrs = true

rust_rules_workspace_name = "rules_rust"

# This causes aliases for dependencies to be rendered in the BUILD
# file located next to this `Cargo.toml` file.
package_aliases_dir = "third_party"

# The set of targets to generate BUILD rules for.
targets = [
    "x86_64-unknown-linux-gnu",
]

output_buildfile_suffix = "BUILD"

# The two acceptable options are "Remote" and "Vendored" which
# is used to idnicate whether the user is using a non-vendored or
# vendored set of dependencies.
genmode = "Remote"
